---
title: "hw3"
format: html
editor: visual
---

## Github:

## Problem1

### a.

```{r}

library(haven)
```

```{r}
data1 <- read_xpt("C:/Users/ken/Desktop/stats 506/hw3/VIX_D.xpt")
data2<- read_xpt("C:/Users/ken/Desktop/stats 506/hw3/DEMO_D.xpt")

merged_data <- merge(data1, data2, by = "SEQN", all = FALSE)

sample_size <- nrow(merged_data)
print(sample_size)
```

### b.

```{r}

library(dplyr)
```

```{r}
# Rename variables
merged_data <- merged_data %>%
  rename(glasses = VIQ220, age = RIDAGEYR)

# Handle missing values: Replace glasses = 9 with NA, subtract 1 from glasses variable
merged_data <- merged_data %>%
  mutate(glasses = ifelse(glasses == 9, NA, glasses - 1))

# Create 10-year age brackets
merged_data <- merged_data %>%
  mutate(age_bracket = cut(age, breaks = seq(0, 90, by = 10), include.lowest = TRUE, 
                           right = FALSE, labels = c("0–9", "10–19", "20–29", "30–39", 
                                                     "40–49", "50–59", "60–69", "70–79", 
                                                     "80–89")))

# Calculate the proportion of glasses/contact lenses wearers by age bracket
proportion_glasses <- merged_data %>%
  group_by(age_bracket) %>%
  summarise(Proportion_Wear_Glasses = mean(glasses == 1, na.rm = TRUE) * 100)

# Produce a nicely formatted table with the results
knitr::kable(proportion_glasses, digits = 1, col.names = c("Age Bracket", "Proportion Wear Glasses (%)"))

```

### c.

```{r}
# Load necessary libraries
library(dplyr)         # Data manipulation
library(broom)         # Extracting model information

library(stargazer)     # Create a nice table for logistic regression results
library(MASS)          # For calculating pseudo R^2 (using pR2 function)

```

```{r}
# Clean up gender
merged_data <- merged_data %>%
  rename(gender = RIAGENDR) %>%
  mutate(female = ifelse(gender == 2, 1, 0))

# Clean up race
merged_data <- merged_data %>%
  rename(race = RIDRETH1)

# Create labels for race categories (optional for visualization purposes)
race_labels <- c("Mexican American", "Other Hispanic", "Non-Hispanic White", 
                 "Non-Hispanic Black", "Multi-racial")

# Clean up PIR (poverty income ratio)
merged_data <- merged_data %>%
  rename(pir = INDFMPIR)

# Logistic regression models
# Model 1: age as predictor
model1 <- glm(glasses ~ age, data = merged_data, family = "binomial")

# Model 2: age, race, and gender as predictors
model2 <- glm(glasses ~ age + factor(race) + factor(female), data = merged_data, family = "binomial")

# Model 3: age, race, gender, and PIR as predictors
model3 <- glm(glasses ~ age + factor(race) + factor(female) + pir, data = merged_data, family = "binomial")

# Display the models' results with pseudo R-squared and AIC
stargazer::stargazer(model1, model2, model3, type = "text",
                     apply.coef = exp,  # Show odds ratios
                     column.labels = c("Model 1", "Model 2", "Model 3"),
                     dep.var.labels = "Wears Glasses",
                     covariate.labels = c("Age", "Race: Other Hispanic", 
                                          "Race: Non-Hispanic White", "Race: Non-Hispanic Black", 
                                          "Race: Multi-racial", "Female", "PIR"),
                     add.lines = list(c("N", nobs(model1), nobs(model2), nobs(model3)),
                                      c("Pseudo R-squared", 
                                        round(1 - model1$deviance / model1$null.deviance, 3),
                                        round(1 - model2$deviance / model2$null.deviance, 3),
                                        round(1 - model3$deviance / model3$null.deviance, 3)),
                                      c("AIC", round(AIC(model1), 1), 
                                        round(AIC(model2), 1), round(AIC(model3), 1))))

```

### d.

```{r}
# Summary of the third model
summary(model3)

# Extract the coefficient for 'female' and calculate the odds ratio
coef_female <- coef(model3)["factor(female)1"]
odds_ratio_female <- exp(coef_female)

# Display the odds ratio for 'female'
odds_ratio_female

# Wald test to assess the significance of the 'female' coefficient
# The p-value for the 'female' variable is included in the model summary output
wald_test_female <- summary(model3)$coefficients["factor(female)1", "Pr(>|z|)"]

# Print the p-value for the 'female' variable
wald_test_female

```

There is also evidence indicating that females have a statistically significantly lower likelihood of wearing glasses or contact lenses for distance vision compared to males.

## Problem2

### a.

```{r}

library(RSQLite)             

```

```{r}
db_path <- "C:/Users/ken/Desktop/stats 506/hw3/sakila_master.db"  # Use forward slashes
# Connect to the SQLite database
sakila <- dbConnect(SQLite(), db_path)
tables <- dbListTables(sakila)
print(tables)
```

```{r}
result <- dbGetQuery(sakila, "
SELECT release_year, count(*)
FROM film
Group by release_year
Order by release_year DESC")
result
```

### b.

```{r}
dbGetQuery(sakila, "
SELECT c.name, count(c.category_id) AS count
FROM category as c
RIGHT JOIN film_category AS fc ON fc.category_id = c.category_id
GROUP BY c.category_id
ORDER BY -count
LIMIT 1
")
```

### c.

```{r}
dbGetQuery(sakila, "
SELECT co.country, count(co.country) AS count
FROM country AS co
RIGHT JOIN
(SELECT country_id
FROM city AS ci
RIGHT JOIN
(SELECT city_id
FROM customer AS c
LEFT JOIN address AS a ON c.address_id = a.address_id
) AS ca ON ca.city_id = ci.city_id
) AS ccc ON ccc.country_id = co.country_id
GROUP BY co.country
HAVING count == 13")
```

## Problem3

### a.

```{r}

file_path <- "C:/Users/ken/Desktop/stats 506/hw3/us-500.csv"

data_us <- read.csv(file_path)

head(data)

```

```{r}
length(data_us$email[grepl("net$", data_us$email)])/nrow(data_us)
```

### b.

```{r}
emails <- strsplit(data_us$email, "@")


usernames <- sapply(emails, "[[", 1)

username_non_alphanumeric <- grepl("[^a-zA-Z0-9]", usernames)

domains <- sapply(emails, "[[", 2)

domains <- gsub("\\.[a-z]{3}", "", domains)

domain_non_alphanumeric <- grepl("[^a-zA-Z0-9]", domains)

proportion_non_alphanumeric <- mean(username_non_alphanumeric | domain_non_alphanumeric)

proportion_non_alphanumeric

```

### c.

```{r}
phone1area <- substr(data_us$phone1, 1, 3)
phone2area <- substr(data_us$phone2, 1, 3)

all_area_codes <- c(phone1area, phone2area)

area_code_freq <- sort(table(all_area_codes), decreasing = TRUE)

top_5_area_codes <- head(area_code_freq, 5)

top_5_area_codes

```

### d.

```{r}
apartments <- data_us$address[grepl("[0-9]+$", data_us$address)]
numbers <- sapply(strsplit(apartments, " "), function(x) x[length(x)])
numbers <- as.numeric(gsub("#", "", numbers))
hist(log(numbers))
```

### e.

```{r}
table(substr(numbers, 1, 1))
```

This data follows a uniform distribution, rather than the decreasing pattern predicted by Benford's law, which suggests that the data may not be genuine.
